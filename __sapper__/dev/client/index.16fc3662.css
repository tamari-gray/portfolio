h1.svelte-13gwhe0{font-size:2.4em;font-weight:700;margin:0 0 0.5em 0}img.svelte-13gwhe0{width:250px;height:150px}.techs.svelte-13gwhe0{width:250px}.next-project.svelte-13gwhe0{display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguMTZmYzM2NjIuY3NzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL2Jsb2cvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuICBleHBvcnQgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuICAgIHJldHVybiB0aGlzLmZldGNoKGBibG9nLmpzb25gKVxuICAgICAgLnRoZW4ociA9PiByLmpzb24oKSlcbiAgICAgIC50aGVuKHBvc3RzID0+IHtcbiAgICAgICAgcmV0dXJuIHsgcG9zdHMgfTtcbiAgICAgIH0pO1xuICB9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgaW1wb3J0IERpR2l0aHViQmFkZ2UgZnJvbSBcInN2ZWx0ZS1pY29ucy9kaS9EaUdpdGh1YkJhZGdlLnN2ZWx0ZVwiO1xuXG4gIGV4cG9ydCBsZXQgcG9zdHM7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAvKiB1bCB7XG4gICAgbWFyZ2luOiAwIDAgMWVtIDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgfSAqL1xuICBoMSB7XG4gICAgZm9udC1zaXplOiAyLjRlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIG1hcmdpbjogMCAwIDAuNWVtIDA7XG4gIH1cbiAgaW1nIHtcbiAgICB3aWR0aDogMjUwcHg7XG4gICAgaGVpZ2h0OiAxNTBweDtcbiAgfVxuICAudGVjaHMge1xuICAgIHdpZHRoOiAyNTBweDtcbiAgfVxuICAubmV4dC1wcm9qZWN0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbk55WXk5eWIzVjBaWE12WW14dlp5OXBibVJsZUM1emRtVnNkR1VpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRGUVVORk96czdTMEZIUnp0RlFVTklPMGxCUTBVc1owSkJRV2RDTzBsQlEyaENMR2RDUVVGblFqdEpRVU5vUWl4dFFrRkJiVUk3UlVGRGNrSTdSVUZEUVR0SlFVTkZMRmxCUVZrN1NVRkRXaXhoUVVGaE8wVkJRMlk3UlVGRFFUdEpRVU5GTEZsQlFWazdSVUZEWkR0RlFVTkJPMGxCUTBVc2IwSkJRV0U3U1VGQllpeGhRVUZoTzBsQlEySXNkMEpCUVhWQ08xbEJRWFpDTEhWQ1FVRjFRanRKUVVOMlFpeDVRa0ZCYlVJN1dVRkJia0lzYlVKQlFXMUNPMFZCUTNKQ0lpd2labWxzWlNJNkluTnlZeTl5YjNWMFpYTXZZbXh2Wnk5cGJtUmxlQzV6ZG1Wc2RHVWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpjYmlBZ0x5b2dkV3dnZTF4dUlDQWdJRzFoY21kcGJqb2dNQ0F3SURGbGJTQXdPMXh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TGpVN1hHNGdJSDBnS2k5Y2JpQWdhREVnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTWk0MFpXMDdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2JpQWdJQ0J0WVhKbmFXNDZJREFnTUNBd0xqVmxiU0F3TzF4dUlDQjlYRzRnSUdsdFp5QjdYRzRnSUNBZ2QybGtkR2c2SURJMU1IQjRPMXh1SUNBZ0lHaGxhV2RvZERvZ01UVXdjSGc3WEc0Z0lIMWNiaUFnTG5SbFkyaHpJSHRjYmlBZ0lDQjNhV1IwYURvZ01qVXdjSGc3WEc0Z0lIMWNiaUFnTG01bGVIUXRjSEp2YW1WamRDQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2JpQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQjlYRzRpWFgwPSAqLzwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPkJsb2c8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgPGRpdiBjbGFzcz1cImNvbHVtbnNcIj5cbiAgICA8IS0tIHRpdGxlIC0tPlxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gY29sLTEyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uc1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGNvbC14cy0xMiBjb2wtc20tMTBcIj5cbiAgICAgICAgICA8aDEgc3R5bGU9XCJtYXJnaW4tYm90dG9tOjAuMjVlbVwiPkNsZWFuZXIgSG9tZXMgd2Vic2l0ZTwvaDE+XG4gICAgICAgICAgPGg1PkRlc2lnbiAmIGRldmVsb3BtZW50PC9oNT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gY29sLTIgY29sLW1sLWF1dG8gaGlkZS1zbSBuZXh0LXByb2plY3RcIj5cbiAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1sZ1wiPlxuICAgICAgICAgICAgPGkgY2xhc3M9XCJpY29uIGljb24tYXJyb3ctcmlnaHRcIiAvPlxuICAgICAgICAgICAgPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDwhLS0gbGVmdCBzaWRlIC0tPlxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gY29sLXNtLTEyXCIgc3R5bGU9XCJib3JkZXI6IHRoaW4gc29saWQgcmVkXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uc1wiPlxuICAgICAgICA8aW1nXG4gICAgICAgICAgY2xhc3M9XCJjb2x1bW4gY29sLTEwIGNvbC1teC1hdXRvXCJcbiAgICAgICAgICBzcmM9XCJjbGVhbmVySG9tZXMucG5nXCJcbiAgICAgICAgICBhbHQ9XCJjbGVhbmVyIGhvbWVzIHdlYnNpdGUgZGVzaWduXCIgLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzPVwiY29sdW1uIGNvbC0xMCBjb2wtbXgtYXV0byBidG4tZ3JvdXAgYnRuLWdyb3VwLWJsb2NrXCJcbiAgICAgICAgICBzdHlsZT1cIndpZHRoOjI1MHB4XCI+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIGhyZWY9XCIuXCI+dmlldyBjb2RlPC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBcIiBocmVmPVwiLlwiPmxpdmUgdmVyc2lvbjwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbiBjb2wtMTAgY29sLW14LWF1dG8gdGVjaHNcIj50ZWNocyB1c2VkPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8IS0tIHJpZ2h0IHNpZGUgLS0+XG4gICAgPGRpdiBjbGFzcz1cImNvbHVtbiBjb2wtc20tMTIgXCIgc3R5bGU9XCJib3JkZXI6IHRoaW4gc29saWQgcmVkXCI+Y29sLTY8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbjwhLS0gPGRpdiBjbGFzcz1cIm1haW5cIj5cbiAgPGRpdiBjbGFzcz1cImxlZnRcIj5cbiAgICA8ZGl2PlxuICAgICAgPGgxIHN0eWxlPVwibWFyZ2luLWJvdHRvbTowLjI1ZW1cIj5DbGVhbmVyIEhvbWVzIHdlYnNpdGU8L2gxPlxuICAgICAgPGgzPkRlc2lnbiAmIGRldmVsb3BtZW50PC9oMz5cbiAgICA8L2Rpdj5cbiAgICA8aW1nIHNyYz1cImNsZWFuZXJIb21lcy5wbmdcIiBhbHQ9XCJjbGVhbmVyIGhvbWVzIHdlYnNpdGUgZGVzaWduXCIgLz5cbiAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uc1wiPlxuICAgICAgPGJ1dHRvbj52aWV3IGNvZGU8L2J1dHRvbj5cbiAgICAgIDxidXR0b24+bGl2ZSB2ZXJzaW9uPC9idXR0b24+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInRlY2hub2xvZ2llc1wiPnRlY2hub2xvZ2llczwvZGl2PlxuICA8L2Rpdj5cblxuICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbiAgICA8ZGl2Pm15IHJvbGU8L2Rpdj5cbiAgICA8ZGl2PnByb2JsZW1zPC9kaXY+XG4gICAgPGRpdj5zb2x1dGlvbnM8L2Rpdj5cbiAgICA8ZGl2Pm5vdGFibGUgZmVhdHVyZXM8L2Rpdj5cbiAgPC9kaXY+XG5cbjwvZGl2PiAtLT5cblxuPCEtLSA8dWw+XG4gIHsjZWFjaCBwb3N0cyBhcyBwb3N0fSAtLT5cbjwhLS0gd2UncmUgdXNpbmcgdGhlIG5vbi1zdGFuZGFyZCBgcmVsPXByZWZldGNoYCBhdHRyaWJ1dGUgdG9cblx0XHRcdFx0dGVsbCBTYXBwZXIgdG8gbG9hZCB0aGUgZGF0YSBmb3IgdGhlIHBhZ2UgYXMgc29vbiBhc1xuXHRcdFx0XHR0aGUgdXNlciBob3ZlcnMgb3ZlciB0aGUgbGluayBvciB0YXBzIGl0LCBpbnN0ZWFkIG9mXG5cdFx0XHRcdHdhaXRpbmcgZm9yIHRoZSAnY2xpY2snIGV2ZW50IC0tPlxuPCEtLSA8bGk+XG4gICAgICA8YSByZWw9XCJwcmVmZXRjaFwiIGhyZWY9XCJibG9nL3twb3N0LnNsdWd9XCI+e3Bvc3QudGl0bGV9PC9hPlxuICAgIDwvbGk+XG4gIHsvZWFjaH1cbjwvdWw+IC0tPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFCRSxFQUFFLGVBQUMsQ0FBQyxBQUNGLFNBQVMsQ0FBRSxLQUFLLENBQ2hCLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLE1BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEFBQ3JCLENBQUMsQUFDRCxHQUFHLGVBQUMsQ0FBQyxBQUNILEtBQUssQ0FBRSxLQUFLLENBQ1osTUFBTSxDQUFFLEtBQUssQUFDZixDQUFDLEFBQ0QsTUFBTSxlQUFDLENBQUMsQUFDTixLQUFLLENBQUUsS0FBSyxBQUNkLENBQUMsQUFDRCxhQUFhLGVBQUMsQ0FBQyxBQUNiLE9BQU8sQ0FBRSxXQUFXLENBQ3BCLE9BQU8sQ0FBRSxJQUFJLENBQ2IsZ0JBQWdCLENBQUUsTUFBTSxDQUNoQixlQUFlLENBQUUsTUFBTSxDQUMvQixpQkFBaUIsQ0FBRSxNQUFNLENBQ2pCLFdBQVcsQ0FBRSxNQUFNLEFBQzdCLENBQUMifQ== */