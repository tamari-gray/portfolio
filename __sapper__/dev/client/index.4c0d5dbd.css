h1.svelte-phrj1y{font-size:2.4em;font-weight:700;margin:0 0 0.5em 0}img.svelte-phrj1y{width:250px;height:150px}.techs.svelte-phrj1y{width:250px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguNGMwZDVkYmQuY3NzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL2Jsb2cvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuICBleHBvcnQgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuICAgIHJldHVybiB0aGlzLmZldGNoKGBibG9nLmpzb25gKVxuICAgICAgLnRoZW4ociA9PiByLmpzb24oKSlcbiAgICAgIC50aGVuKHBvc3RzID0+IHtcbiAgICAgICAgcmV0dXJuIHsgcG9zdHMgfTtcbiAgICAgIH0pO1xuICB9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgaW1wb3J0IERpR2l0aHViQmFkZ2UgZnJvbSBcInN2ZWx0ZS1pY29ucy9kaS9EaUdpdGh1YkJhZGdlLnN2ZWx0ZVwiO1xuXG4gIGV4cG9ydCBsZXQgcG9zdHM7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAvKiB1bCB7XG4gICAgbWFyZ2luOiAwIDAgMWVtIDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgfSAqL1xuICBoMSB7XG4gICAgZm9udC1zaXplOiAyLjRlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIG1hcmdpbjogMCAwIDAuNWVtIDA7XG4gIH1cbiAgaW1nIHtcbiAgICB3aWR0aDogMjUwcHg7XG4gICAgaGVpZ2h0OiAxNTBweDtcbiAgfVxuICAudGVjaHMge1xuICAgIHdpZHRoOiAyNTBweDtcbiAgfVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OeVl5OXliM1YwWlhNdllteHZaeTlwYm1SbGVDNXpkbVZzZEdVaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWp0RlFVTkZPenM3UzBGSFJ6dEZRVU5JTzBsQlEwVXNaMEpCUVdkQ08wbEJRMmhDTEdkQ1FVRm5RanRKUVVOb1FpeHRRa0ZCYlVJN1JVRkRja0k3UlVGRFFUdEpRVU5GTEZsQlFWazdTVUZEV2l4aFFVRmhPMFZCUTJZN1JVRkRRVHRKUVVORkxGbEJRVms3UlVGRFpDSXNJbVpwYkdVaU9pSnpjbU12Y205MWRHVnpMMkpzYjJjdmFXNWtaWGd1YzNabGJIUmxJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWEc0Z0lDOHFJSFZzSUh0Y2JpQWdJQ0J0WVhKbmFXNDZJREFnTUNBeFpXMGdNRHRjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVM0MU8xeHVJQ0I5SUNvdlhHNGdJR2d4SUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURJdU5HVnRPMXh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hHNGdJQ0FnYldGeVoybHVPaUF3SURBZ01DNDFaVzBnTUR0Y2JpQWdmVnh1SUNCcGJXY2dlMXh1SUNBZ0lIZHBaSFJvT2lBeU5UQndlRHRjYmlBZ0lDQm9aV2xuYUhRNklERTFNSEI0TzF4dUlDQjlYRzRnSUM1MFpXTm9jeUI3WEc0Z0lDQWdkMmxrZEdnNklESTFNSEI0TzF4dUlDQjlYRzRpWFgwPSAqLzwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPkJsb2c8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgPGRpdiBjbGFzcz1cImNvbHVtbnNcIj5cbiAgICA8IS0tIHRpdGxlIC0tPlxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gY29sLTEyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uc1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGNvbC0xMFwiPlxuICAgICAgICAgIDxoMSBzdHlsZT1cIm1hcmdpbi1ib3R0b206MC4yNWVtXCI+Q2xlYW5lciBIb21lcyB3ZWJzaXRlPC9oMT5cbiAgICAgICAgICA8aDU+RGVzaWduICYgZGV2ZWxvcG1lbnQ8L2g1PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbiBjb2wtMiBjb2wtbWwtYXV0byBoaWRlLXNtXCI+XG5cbiAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1sZ1wiPlxuICAgICAgICAgICAgPGkgY2xhc3M9XCJpY29uIGljb24tYXJyb3ctcmlnaHRcIiAvPlxuICAgICAgICAgICAgPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDwhLS0gbGVmdCBzaWRlIC0tPlxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gY29sLXNtLTEyXCIgc3R5bGU9XCJib3JkZXI6IHRoaW4gc29saWQgcmVkXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uc1wiPlxuICAgICAgICA8aW1nXG4gICAgICAgICAgY2xhc3M9XCJjb2x1bW4gY29sLTEwIGNvbC1teC1hdXRvXCJcbiAgICAgICAgICBzcmM9XCJjbGVhbmVySG9tZXMucG5nXCJcbiAgICAgICAgICBhbHQ9XCJjbGVhbmVyIGhvbWVzIHdlYnNpdGUgZGVzaWduXCIgLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzPVwiY29sdW1uIGNvbC0xMCBjb2wtbXgtYXV0byBidG4tZ3JvdXAgYnRuLWdyb3VwLWJsb2NrXCJcbiAgICAgICAgICBzdHlsZT1cIndpZHRoOjI1MHB4XCI+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIGhyZWY9XCIuXCI+dmlldyBjb2RlPC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBcIiBocmVmPVwiLlwiPmxpdmUgdmVyc2lvbjwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbiBjb2wtMTAgY29sLW14LWF1dG8gdGVjaHNcIj50ZWNocyB1c2VkPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8IS0tIHJpZ2h0IHNpZGUgLS0+XG4gICAgPGRpdiBjbGFzcz1cImNvbHVtbiBjb2wtc20tMTIgXCIgc3R5bGU9XCJib3JkZXI6IHRoaW4gc29saWQgcmVkXCI+Y29sLTY8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbjwhLS0gPGRpdiBjbGFzcz1cIm1haW5cIj5cbiAgPGRpdiBjbGFzcz1cImxlZnRcIj5cbiAgICA8ZGl2PlxuICAgICAgPGgxIHN0eWxlPVwibWFyZ2luLWJvdHRvbTowLjI1ZW1cIj5DbGVhbmVyIEhvbWVzIHdlYnNpdGU8L2gxPlxuICAgICAgPGgzPkRlc2lnbiAmIGRldmVsb3BtZW50PC9oMz5cbiAgICA8L2Rpdj5cbiAgICA8aW1nIHNyYz1cImNsZWFuZXJIb21lcy5wbmdcIiBhbHQ9XCJjbGVhbmVyIGhvbWVzIHdlYnNpdGUgZGVzaWduXCIgLz5cbiAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uc1wiPlxuICAgICAgPGJ1dHRvbj52aWV3IGNvZGU8L2J1dHRvbj5cbiAgICAgIDxidXR0b24+bGl2ZSB2ZXJzaW9uPC9idXR0b24+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInRlY2hub2xvZ2llc1wiPnRlY2hub2xvZ2llczwvZGl2PlxuICA8L2Rpdj5cblxuICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbiAgICA8ZGl2Pm15IHJvbGU8L2Rpdj5cbiAgICA8ZGl2PnByb2JsZW1zPC9kaXY+XG4gICAgPGRpdj5zb2x1dGlvbnM8L2Rpdj5cbiAgICA8ZGl2Pm5vdGFibGUgZmVhdHVyZXM8L2Rpdj5cbiAgPC9kaXY+XG5cbjwvZGl2PiAtLT5cblxuPCEtLSA8dWw+XG4gIHsjZWFjaCBwb3N0cyBhcyBwb3N0fSAtLT5cbjwhLS0gd2UncmUgdXNpbmcgdGhlIG5vbi1zdGFuZGFyZCBgcmVsPXByZWZldGNoYCBhdHRyaWJ1dGUgdG9cblx0XHRcdFx0dGVsbCBTYXBwZXIgdG8gbG9hZCB0aGUgZGF0YSBmb3IgdGhlIHBhZ2UgYXMgc29vbiBhc1xuXHRcdFx0XHR0aGUgdXNlciBob3ZlcnMgb3ZlciB0aGUgbGluayBvciB0YXBzIGl0LCBpbnN0ZWFkIG9mXG5cdFx0XHRcdHdhaXRpbmcgZm9yIHRoZSAnY2xpY2snIGV2ZW50IC0tPlxuPCEtLSA8bGk+XG4gICAgICA8YSByZWw9XCJwcmVmZXRjaFwiIGhyZWY9XCJibG9nL3twb3N0LnNsdWd9XCI+e3Bvc3QudGl0bGV9PC9hPlxuICAgIDwvbGk+XG4gIHsvZWFjaH1cbjwvdWw+IC0tPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFCRSxFQUFFLGNBQUMsQ0FBQyxBQUNGLFNBQVMsQ0FBRSxLQUFLLENBQ2hCLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLE1BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEFBQ3JCLENBQUMsQUFDRCxHQUFHLGNBQUMsQ0FBQyxBQUNILEtBQUssQ0FBRSxLQUFLLENBQ1osTUFBTSxDQUFFLEtBQUssQUFDZixDQUFDLEFBQ0QsTUFBTSxjQUFDLENBQUMsQUFDTixLQUFLLENBQUUsS0FBSyxBQUNkLENBQUMifQ== */