h1.svelte-13gwhe0{font-size:2.4em;font-weight:700;margin:0 0 0.5em 0}img.svelte-13gwhe0{width:250px;height:150px}.techs.svelte-13gwhe0{width:250px}.next-project.svelte-13gwhe0{display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguNWM0NDY0YTQuY3NzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL2Jsb2cvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuICBleHBvcnQgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuICAgIHJldHVybiB0aGlzLmZldGNoKGBibG9nLmpzb25gKVxuICAgICAgLnRoZW4ociA9PiByLmpzb24oKSlcbiAgICAgIC50aGVuKHBvc3RzID0+IHtcbiAgICAgICAgcmV0dXJuIHsgcG9zdHMgfTtcbiAgICAgIH0pO1xuICB9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgaW1wb3J0IERpR2l0aHViQmFkZ2UgZnJvbSBcInN2ZWx0ZS1pY29ucy9kaS9EaUdpdGh1YkJhZGdlLnN2ZWx0ZVwiO1xuXG4gIGV4cG9ydCBsZXQgcG9zdHM7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAvKiB1bCB7XG4gICAgbWFyZ2luOiAwIDAgMWVtIDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgfSAqL1xuICBoMSB7XG4gICAgZm9udC1zaXplOiAyLjRlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIG1hcmdpbjogMCAwIDAuNWVtIDA7XG4gIH1cbiAgaW1nIHtcbiAgICB3aWR0aDogMjUwcHg7XG4gICAgaGVpZ2h0OiAxNTBweDtcbiAgfVxuICAudGVjaHMge1xuICAgIHdpZHRoOiAyNTBweDtcbiAgfVxuICAubmV4dC1wcm9qZWN0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbk55WXk5eWIzVjBaWE12WW14dlp5OXBibVJsZUM1emRtVnNkR1VpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRGUVVORk96czdTMEZIUnp0RlFVTklPMGxCUTBVc1owSkJRV2RDTzBsQlEyaENMR2RDUVVGblFqdEpRVU5vUWl4dFFrRkJiVUk3UlVGRGNrSTdSVUZEUVR0SlFVTkZMRmxCUVZrN1NVRkRXaXhoUVVGaE8wVkJRMlk3UlVGRFFUdEpRVU5GTEZsQlFWazdSVUZEWkR0RlFVTkJPMGxCUTBVc2IwSkJRV0U3U1VGQllpeGhRVUZoTzBsQlEySXNkMEpCUVhWQ08xbEJRWFpDTEhWQ1FVRjFRanRKUVVOMlFpeDVRa0ZCYlVJN1dVRkJia0lzYlVKQlFXMUNPMFZCUTNKQ0lpd2labWxzWlNJNkluTnlZeTl5YjNWMFpYTXZZbXh2Wnk5cGJtUmxlQzV6ZG1Wc2RHVWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpjYmlBZ0x5b2dkV3dnZTF4dUlDQWdJRzFoY21kcGJqb2dNQ0F3SURGbGJTQXdPMXh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TGpVN1hHNGdJSDBnS2k5Y2JpQWdhREVnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTWk0MFpXMDdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2JpQWdJQ0J0WVhKbmFXNDZJREFnTUNBd0xqVmxiU0F3TzF4dUlDQjlYRzRnSUdsdFp5QjdYRzRnSUNBZ2QybGtkR2c2SURJMU1IQjRPMXh1SUNBZ0lHaGxhV2RvZERvZ01UVXdjSGc3WEc0Z0lIMWNiaUFnTG5SbFkyaHpJSHRjYmlBZ0lDQjNhV1IwYURvZ01qVXdjSGc3WEc0Z0lIMWNiaUFnTG01bGVIUXRjSEp2YW1WamRDQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2JpQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQjlYRzRpWFgwPSAqLzwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPkJsb2c8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgPGRpdiBjbGFzcz1cImNvbHVtbnNcIj5cbiAgICA8IS0tIHRpdGxlIC0tPlxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gY29sLTEyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uc1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGNvbC14cy0xMiBjb2wtOFwiPlxuICAgICAgICAgIDxoMSBzdHlsZT1cIm1hcmdpbi1ib3R0b206MC4yNWVtXCI+Q2xlYW5lciBIb21lcyB3ZWJzaXRlPC9oMT5cbiAgICAgICAgICA8aDU+RGVzaWduICYgZGV2ZWxvcG1lbnQ8L2g1PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbiBjb2wtMiBjb2wtbXgtYXV0byBoaWRlLXNtIG5leHQtcHJvamVjdFwiPlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXByaW1hcnkgYnRuLWxnXCI+XG4gICAgICAgICAgICA8aSBjbGFzcz1cImljb24gaWNvbi1hcnJvdy1yaWdodFwiIC8+XG4gICAgICAgICAgICBuZXh0IHByb2plY3RcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8IS0tIGxlZnQgc2lkZSAtLT5cbiAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGNvbC1zbS0xMlwiPlxuICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbnNcIj5cbiAgICAgICAgPGltZ1xuICAgICAgICAgIGNsYXNzPVwiY29sdW1uIGNvbC0xMCBjb2wtbXgtYXV0b1wiXG4gICAgICAgICAgc3JjPVwiY2xlYW5lckhvbWVzLnBuZ1wiXG4gICAgICAgICAgYWx0PVwiY2xlYW5lciBob21lcyB3ZWJzaXRlIGRlc2lnblwiIC8+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzcz1cImNvbHVtbiBjb2wtMTAgY29sLW14LWF1dG8gYnRuLWdyb3VwIGJ0bi1ncm91cC1ibG9ja1wiXG4gICAgICAgICAgc3R5bGU9XCJ3aWR0aDoyNTBweFwiPlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIiBocmVmPVwiLlwiPnZpZXcgY29kZTwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gXCIgaHJlZj1cIi5cIj5saXZlIHZlcnNpb248L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gY29sLTEwIGNvbC1teC1hdXRvIHRlY2hzXCI+dGVjaHMgdXNlZDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPCEtLSByaWdodCBzaWRlIC0tPlxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gY29sLXNtLTEyIFwiPlxuICAgICAgPGRpdiBjbGFzcz1cImFjY29yZGlvblwiPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgIGlkPVwiYWNjb3JkaW9uLTFcIlxuICAgICAgICAgIG5hbWU9XCJhY2NvcmRpb24tY2hlY2tib3hcIlxuICAgICAgICAgIGhpZGRlbiAvPlxuICAgICAgICA8bGFiZWwgY2xhc3M9XCJhY2NvcmRpb24taGVhZGVyXCIgZm9yPVwiYWNjb3JkaW9uLTFcIj5cbiAgICAgICAgICA8aSBjbGFzcz1cImljb24gaWNvbi1hcnJvdy1yaWdodCBtci0xXCIgLz5cbiAgICAgICAgICBUaXRsZVxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYWNjb3JkaW9uLWJvZHlcIj5cbiAgICAgICAgICA8IS0tIEFjY29yZGlvbnMgY29udGVudCAtLT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgaWQ9XCJhY2NvcmRpb24tMlwiXG4gICAgICAgICAgbmFtZT1cImFjY29yZGlvbi1jaGVja2JveFwiXG4gICAgICAgICAgaGlkZGVuIC8+XG4gICAgICAgIDxsYWJlbCBjbGFzcz1cImFjY29yZGlvbi1oZWFkZXJcIiBmb3I9XCJhY2NvcmRpb24tMlwiPlxuICAgICAgICAgIDxpIGNsYXNzPVwiaWNvbiBpY29uLWFycm93LXJpZ2h0IG1yLTFcIiAvPlxuICAgICAgICAgIFRpdGxlIDJcbiAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPGRpdiBjbGFzcz1cImFjY29yZGlvbi1ib2R5XCI+XG4gICAgICAgICAgPCEtLSBBY2NvcmRpb25zIGNvbnRlbnQgLS0+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG5cbjwhLS0gPGRpdiBjbGFzcz1cInJpZ2h0XCI+XG4gICAgPGRpdj5teSByb2xlPC9kaXY+XG4gICAgPGRpdj5wcm9ibGVtczwvZGl2PlxuICAgIDxkaXY+c29sdXRpb25zPC9kaXY+XG4gICAgPGRpdj5ub3RhYmxlIGZlYXR1cmVzPC9kaXY+XG4gIDwvZGl2PiAtLT5cblxuPCEtLSA8dWw+XG4gIHsjZWFjaCBwb3N0cyBhcyBwb3N0fSAtLT5cbjwhLS0gd2UncmUgdXNpbmcgdGhlIG5vbi1zdGFuZGFyZCBgcmVsPXByZWZldGNoYCBhdHRyaWJ1dGUgdG9cblx0XHRcdFx0dGVsbCBTYXBwZXIgdG8gbG9hZCB0aGUgZGF0YSBmb3IgdGhlIHBhZ2UgYXMgc29vbiBhc1xuXHRcdFx0XHR0aGUgdXNlciBob3ZlcnMgb3ZlciB0aGUgbGluayBvciB0YXBzIGl0LCBpbnN0ZWFkIG9mXG5cdFx0XHRcdHdhaXRpbmcgZm9yIHRoZSAnY2xpY2snIGV2ZW50IC0tPlxuPCEtLSA8bGk+XG4gICAgICA8YSByZWw9XCJwcmVmZXRjaFwiIGhyZWY9XCJibG9nL3twb3N0LnNsdWd9XCI+e3Bvc3QudGl0bGV9PC9hPlxuICAgIDwvbGk+XG4gIHsvZWFjaH1cbjwvdWw+IC0tPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFCRSxFQUFFLGVBQUMsQ0FBQyxBQUNGLFNBQVMsQ0FBRSxLQUFLLENBQ2hCLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLE1BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEFBQ3JCLENBQUMsQUFDRCxHQUFHLGVBQUMsQ0FBQyxBQUNILEtBQUssQ0FBRSxLQUFLLENBQ1osTUFBTSxDQUFFLEtBQUssQUFDZixDQUFDLEFBQ0QsTUFBTSxlQUFDLENBQUMsQUFDTixLQUFLLENBQUUsS0FBSyxBQUNkLENBQUMsQUFDRCxhQUFhLGVBQUMsQ0FBQyxBQUNiLE9BQU8sQ0FBRSxXQUFXLENBQ3BCLE9BQU8sQ0FBRSxJQUFJLENBQ2IsZ0JBQWdCLENBQUUsTUFBTSxDQUNoQixlQUFlLENBQUUsTUFBTSxDQUMvQixpQkFBaUIsQ0FBRSxNQUFNLENBQ2pCLFdBQVcsQ0FBRSxNQUFNLEFBQzdCLENBQUMifQ== */