import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, C as space, B as element, t as text, D as claim_space, b as claim_element, e as children, f as claim_text, g as detach_dev, o as attr_dev, h as add_location, j as insert_dev, k as append_dev, n as noop } from './index.279dd957.js';

/* src/routes/blog/index.svelte generated by Svelte v3.12.1 */

const file = "src/routes/blog/index.svelte";

function create_fragment(ctx) {
	var t0, div6, div5, div3, t1, div2, div0, t2, t3, div1, t4, t5, div4, t6;

	const block = {
		c: function create() {
			t0 = space();
			div6 = element("div");
			div5 = element("div");
			div3 = element("div");
			t1 = text("col-6\n      ");
			div2 = element("div");
			div0 = element("div");
			t2 = text("col-6");
			t3 = space();
			div1 = element("div");
			t4 = text("col-6");
			t5 = space();
			div4 = element("div");
			t6 = text("col-6");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_space(nodes);

			div6 = claim_element(nodes, "DIV", { class: true }, false);
			var div6_nodes = children(div6);

			div5 = claim_element(div6_nodes, "DIV", { class: true }, false);
			var div5_nodes = children(div5);

			div3 = claim_element(div5_nodes, "DIV", { class: true }, false);
			var div3_nodes = children(div3);

			t1 = claim_text(div3_nodes, "col-6\n      ");

			div2 = claim_element(div3_nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div0 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			t2 = claim_text(div0_nodes, "col-6");
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);

			div1 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			t4 = claim_text(div1_nodes, "col-6");
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t5 = claim_space(div5_nodes);

			div4 = claim_element(div5_nodes, "DIV", { class: true }, false);
			var div4_nodes = children(div4);

			t6 = claim_text(div4_nodes, "col-6");
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			document.title = "Blog";
			attr_dev(div0, "class", "column col-6");
			add_location(div0, file, 34, 8, 1110);
			attr_dev(div1, "class", "column col-6");
			add_location(div1, file, 35, 8, 1156);
			attr_dev(div2, "class", "columns");
			add_location(div2, file, 33, 6, 1080);
			attr_dev(div3, "class", "column col-6");
			add_location(div3, file, 32, 4, 1042);
			attr_dev(div4, "class", "column col-6");
			add_location(div4, file, 38, 4, 1222);
			attr_dev(div5, "class", "columns");
			add_location(div5, file, 31, 2, 1016);
			attr_dev(div6, "class", "container");
			add_location(div6, file, 30, 0, 990);
		},

		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div6, anchor);
			append_dev(div6, div5);
			append_dev(div5, div3);
			append_dev(div3, t1);
			append_dev(div3, div2);
			append_dev(div2, div0);
			append_dev(div0, t2);
			append_dev(div2, t3);
			append_dev(div2, div1);
			append_dev(div1, t4);
			append_dev(div5, t5);
			append_dev(div5, div4);
			append_dev(div4, t6);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t0);
				detach_dev(div6);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

function preload({ params, query }) {
  return this.fetch(`blog.json`)
    .then(r => r.json())
    .then(posts => {
      return { posts };
    });
}

function instance($$self, $$props, $$invalidate) {
	let { posts } = $$props;

	const writable_props = ['posts'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Index> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('posts' in $$props) $$invalidate('posts', posts = $$props.posts);
	};

	$$self.$capture_state = () => {
		return { posts };
	};

	$$self.$inject_state = $$props => {
		if ('posts' in $$props) $$invalidate('posts', posts = $$props.posts);
	};

	return { posts };
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["posts"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Index", options, id: create_fragment.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.posts === undefined && !('posts' in props)) {
			console.warn("<Index> was created without expected prop 'posts'");
		}
	}

	get posts() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set posts(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Index;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguN2VlNjZmNTguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvYmxvZy9pbmRleC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG4gIGV4cG9ydCBmdW5jdGlvbiBwcmVsb2FkKHsgcGFyYW1zLCBxdWVyeSB9KSB7XG4gICAgcmV0dXJuIHRoaXMuZmV0Y2goYGJsb2cuanNvbmApXG4gICAgICAudGhlbihyID0+IHIuanNvbigpKVxuICAgICAgLnRoZW4ocG9zdHMgPT4ge1xuICAgICAgICByZXR1cm4geyBwb3N0cyB9O1xuICAgICAgfSk7XG4gIH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuICBleHBvcnQgbGV0IHBvc3RzO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cbiAgLyogdWwge1xuICAgIG1hcmdpbjogMCAwIDFlbSAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIH0gKi9cbiAgaDEge1xuICAgIGZvbnQtc2l6ZTogMi40ZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBtYXJnaW46IDAgMCAwLjVlbSAwO1xuICB9XG48L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT5CbG9nPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gIDxkaXYgY2xhc3M9XCJjb2x1bW5zXCI+XG4gICAgPGRpdiBjbGFzcz1cImNvbHVtbiBjb2wtNlwiPmNvbC02XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uc1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGNvbC02XCI+Y29sLTY8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbiBjb2wtNlwiPmNvbC02PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGNvbC02XCI+Y29sLTY8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbjwhLS0gPGRpdiBjbGFzcz1cIm1haW5cIj5cbiAgPGRpdiBjbGFzcz1cImxlZnRcIj5cbiAgICA8ZGl2PlxuICAgICAgPGgxIHN0eWxlPVwibWFyZ2luLWJvdHRvbTowLjI1ZW1cIj5DbGVhbmVyIEhvbWVzIHdlYnNpdGU8L2gxPlxuICAgICAgPGgzPkRlc2lnbiAmIGRldmVsb3BtZW50PC9oMz5cbiAgICA8L2Rpdj5cbiAgICA8aW1nIHNyYz1cImNsZWFuZXJIb21lcy5wbmdcIiBhbHQ9XCJjbGVhbmVyIGhvbWVzIHdlYnNpdGUgZGVzaWduXCIgLz5cbiAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uc1wiPlxuICAgICAgPGJ1dHRvbj52aWV3IGNvZGU8L2J1dHRvbj5cbiAgICAgIDxidXR0b24+bGl2ZSB2ZXJzaW9uPC9idXR0b24+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInRlY2hub2xvZ2llc1wiPnRlY2hub2xvZ2llczwvZGl2PlxuICA8L2Rpdj5cblxuICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbiAgICA8ZGl2Pm15IHJvbGU8L2Rpdj5cbiAgICA8ZGl2PnByb2JsZW1zPC9kaXY+XG4gICAgPGRpdj5zb2x1dGlvbnM8L2Rpdj5cbiAgICA8ZGl2Pm5vdGFibGUgZmVhdHVyZXM8L2Rpdj5cbiAgPC9kaXY+XG5cbjwvZGl2PiAtLT5cblxuPCEtLSA8dWw+XG4gIHsjZWFjaCBwb3N0cyBhcyBwb3N0fSAtLT5cbjwhLS0gd2UncmUgdXNpbmcgdGhlIG5vbi1zdGFuZGFyZCBgcmVsPXByZWZldGNoYCBhdHRyaWJ1dGUgdG9cblx0XHRcdFx0dGVsbCBTYXBwZXIgdG8gbG9hZCB0aGUgZGF0YSBmb3IgdGhlIHBhZ2UgYXMgc29vbiBhc1xuXHRcdFx0XHR0aGUgdXNlciBob3ZlcnMgb3ZlciB0aGUgbGluayBvciB0YXBzIGl0LCBpbnN0ZWFkIG9mXG5cdFx0XHRcdHdhaXRpbmcgZm9yIHRoZSAnY2xpY2snIGV2ZW50IC0tPlxuPCEtLSA8bGk+XG4gICAgICA8YSByZWw9XCJwcmVmZXRjaFwiIGhyZWY9XCJibG9nL3twb3N0LnNsdWd9XCI+e3Bvc3QudGl0bGV9PC9hPlxuICAgIDwvbGk+XG4gIHsvZWFjaH1cbjwvdWw+IC0tPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDUyxTQUFTLE9BQU8sQ0FBQyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRTtFQUN6QyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztLQUMzQixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztLQUNuQixJQUFJLENBQUMsS0FBSyxJQUFJO01BQ2IsT0FBTyxFQUFFLEtBQUssRUFBRSxDQUFDO0tBQ2xCLENBQUMsQ0FBQztDQUNOOzs7Q0FJTSxNQUFJLGlCQUFLLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
