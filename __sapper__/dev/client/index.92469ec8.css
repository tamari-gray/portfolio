h1.svelte-19j5tvg{font-size:2.4em;font-weight:700;margin:0 0 0.5em 0}.main.svelte-19j5tvg{height:80vh;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}.left.svelte-19j5tvg{-webkit-box-flex:1;flex:1 1 0;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;justify-content:space-around}img.svelte-19j5tvg{width:350px;height:200px}.right.svelte-19j5tvg{-webkit-box-flex:1;flex:1 1 0;-webkit-box-flex:2;flex-grow:2;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;justify-content:space-around}.buttons.svelte-19j5tvg{border:thin solid red}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguOTI0NjllYzguY3NzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL2Jsb2cvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuICBleHBvcnQgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuICAgIHJldHVybiB0aGlzLmZldGNoKGBibG9nLmpzb25gKVxuICAgICAgLnRoZW4ociA9PiByLmpzb24oKSlcbiAgICAgIC50aGVuKHBvc3RzID0+IHtcbiAgICAgICAgcmV0dXJuIHsgcG9zdHMgfTtcbiAgICAgIH0pO1xuICB9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgZXhwb3J0IGxldCBwb3N0cztcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4gIC8qIHVsIHtcbiAgICBtYXJnaW46IDAgMCAxZW0gMDtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICB9ICovXG4gIGgxIHtcbiAgICBmb250LXNpemU6IDIuNGVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbiAgfVxuICAubWFpbiB7XG4gICAgaGVpZ2h0OiA4MHZoO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiBob3Jpem9udGFsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxuXG4gIC5sZWZ0IHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAxO1xuICAgICAgICAgICAgZmxleDogMSAxIDA7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgfVxuXG4gIGltZyB7XG4gICAgd2lkdGg6IDM1MHB4O1xuICAgIGhlaWdodDogMjAwcHg7XG4gIH1cblxuICAucmlnaHQge1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDE7XG4gICAgICAgICAgICBmbGV4OiAxIDEgMDtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAyO1xuICAgICAgICAgICAgZmxleC1ncm93OiAyO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIH1cblxuICAuYnV0dG9ucyB7XG4gICAgYm9yZGVyOiB0aGluIHNvbGlkIHJlZDtcbiAgfVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OeVl5OXliM1YwWlhNdllteHZaeTlwYm1SbGVDNXpkbVZzZEdVaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWp0RlFVTkZPenM3UzBGSFJ6dEZRVU5JTzBsQlEwVXNaMEpCUVdkQ08wbEJRMmhDTEdkQ1FVRm5RanRKUVVOb1FpeHRRa0ZCYlVJN1JVRkRja0k3UlVGRFFUdEpRVU5GTEZsQlFWazdTVUZEV2l4dlFrRkJZVHRKUVVGaUxHRkJRV0U3U1VGRFlpdzRRa0ZCYlVJN1NVRkJia0lzTmtKQlFXMUNPMWxCUVc1Q0xHMUNRVUZ0UWp0RlFVTnlRanM3UlVGRlFUdEpRVU5GTEcxQ1FVRlhPMWxCUVZnc1YwRkJWenRKUVVOWUxHOUNRVUZoTzBsQlFXSXNZVUZCWVR0SlFVTmlMRFJDUVVGelFqdEpRVUYwUWl3MlFrRkJjMEk3V1VGQmRFSXNjMEpCUVhOQ08wbEJRM1JDTEhsQ1FVRnRRanRaUVVGdVFpeHRRa0ZCYlVJN1NVRkRia0lzTmtKQlFUWkNPMFZCUXk5Q096dEZRVVZCTzBsQlEwVXNXVUZCV1R0SlFVTmFMR0ZCUVdFN1JVRkRaanM3UlVGRlFUdEpRVU5GTEcxQ1FVRlhPMWxCUVZnc1YwRkJWenRKUVVOWUxHMUNRVUZaTzFsQlFWb3NXVUZCV1R0SlFVTmFMRzlDUVVGaE8wbEJRV0lzWVVGQllUdEpRVU5pTERSQ1FVRnpRanRKUVVGMFFpdzJRa0ZCYzBJN1dVRkJkRUlzYzBKQlFYTkNPMGxCUTNSQ0xIbENRVUZ0UWp0WlFVRnVRaXh0UWtGQmJVSTdTVUZEYmtJc05rSkJRVFpDTzBWQlF5OUNPenRGUVVWQk8wbEJRMFVzYzBKQlFYTkNPMFZCUTNoQ0lpd2labWxzWlNJNkluTnlZeTl5YjNWMFpYTXZZbXh2Wnk5cGJtUmxlQzV6ZG1Wc2RHVWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpjYmlBZ0x5b2dkV3dnZTF4dUlDQWdJRzFoY21kcGJqb2dNQ0F3SURGbGJTQXdPMXh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TGpVN1hHNGdJSDBnS2k5Y2JpQWdhREVnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTWk0MFpXMDdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2JpQWdJQ0J0WVhKbmFXNDZJREFnTUNBd0xqVmxiU0F3TzF4dUlDQjlYRzRnSUM1dFlXbHVJSHRjYmlBZ0lDQm9aV2xuYUhRNklEZ3dkbWc3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2djbTkzTzF4dUlDQjlYRzVjYmlBZ0xteGxablFnZTF4dUlDQWdJR1pzWlhnNklERWdNU0F3TzF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNiaUFnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nYzNCaFkyVXRZWEp2ZFc1a08xeHVJQ0I5WEc1Y2JpQWdhVzFuSUh0Y2JpQWdJQ0IzYVdSMGFEb2dNelV3Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUF5TURCd2VEdGNiaUFnZlZ4dVhHNGdJQzV5YVdkb2RDQjdYRzRnSUNBZ1pteGxlRG9nTVNBeElEQTdYRzRnSUNBZ1pteGxlQzFuY205M09pQXlPMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JpQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFlYSnZkVzVrTzF4dUlDQjlYRzVjYmlBZ0xtSjFkSFJ2Ym5NZ2UxeHVJQ0FnSUdKdmNtUmxjam9nZEdocGJpQnpiMnhwWkNCeVpXUTdYRzRnSUgxY2JpSmRmUT09ICovPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuICA8dGl0bGU+QmxvZzwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPGRpdiBjbGFzcz1cIm1haW5cIj5cbiAgPGRpdiBjbGFzcz1cImxlZnRcIj5cbiAgICA8ZGl2PlxuICAgICAgPGgxIHN0eWxlPVwibWFyZ2luLWJvdHRvbTowLjI1ZW1cIj5DbGVhbmVyIEhvbWVzIHdlYnNpdGU8L2gxPlxuICAgICAgPGgzPkRlc2lnbiAmIGRldmVsb3BtZW50PC9oMz5cbiAgICA8L2Rpdj5cbiAgICA8aW1nIHNyYz1cImNsZWFuZXJIb21lcy5wbmdcIiBhbHQ9XCJjbGVhbmVyIGhvbWVzIHdlYnNpdGUgZGVzaWduXCIgLz5cbiAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uc1wiPlxuICAgICAgPGJ1dHRvbj52aWV3IGNvZGU8L2J1dHRvbj5cbiAgICAgIDxidXR0b24+bGl2ZSB2ZXJzaW9uPC9idXR0b24+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInRlY2hub2xvZ2llc1wiPnRlY2hub2xvZ2llczwvZGl2PlxuICA8L2Rpdj5cblxuICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbiAgICA8ZGl2Pm15IHJvbGU8L2Rpdj5cbiAgICA8ZGl2PnByb2JsZW1zPC9kaXY+XG4gICAgPGRpdj5zb2x1dGlvbnM8L2Rpdj5cbiAgICA8ZGl2Pm5vdGFibGUgZmVhdHVyZXM8L2Rpdj5cbiAgPC9kaXY+XG5cbjwvZGl2PlxuXG48ZGl2IGNsYXNzPVwiYWNjb3JkaW9uXCI+XG4gIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBpZD1cImFjY29yZGlvbi0xXCIgbmFtZT1cImFjY29yZGlvbi1jaGVja2JveFwiIGhpZGRlbj5cbiAgPGxhYmVsIGNsYXNzPVwiYWNjb3JkaW9uLWhlYWRlclwiIGZvcj1cImFjY29yZGlvbi0xXCI+XG4gICAgPGkgY2xhc3M9XCJpY29uIGljb24tYXJyb3ctcmlnaHQgbXItMVwiPjwvaT5cbiAgICBUaXRsZVxuICA8L2xhYmVsPlxuICA8ZGl2IGNsYXNzPVwiYWNjb3JkaW9uLWJvZHlcIj5cbiAgICA8IS0tIEFjY29yZGlvbnMgY29udGVudCAtLT5cbiAgPC9kaXY+XG48L2Rpdj5cblxuPCEtLSA8dWw+XG4gIHsjZWFjaCBwb3N0cyBhcyBwb3N0fSAtLT5cbjwhLS0gd2UncmUgdXNpbmcgdGhlIG5vbi1zdGFuZGFyZCBgcmVsPXByZWZldGNoYCBhdHRyaWJ1dGUgdG9cblx0XHRcdFx0dGVsbCBTYXBwZXIgdG8gbG9hZCB0aGUgZGF0YSBmb3IgdGhlIHBhZ2UgYXMgc29vbiBhc1xuXHRcdFx0XHR0aGUgdXNlciBob3ZlcnMgb3ZlciB0aGUgbGluayBvciB0YXBzIGl0LCBpbnN0ZWFkIG9mXG5cdFx0XHRcdHdhaXRpbmcgZm9yIHRoZSAnY2xpY2snIGV2ZW50IC0tPlxuPCEtLSA8bGk+XG4gICAgICA8YSByZWw9XCJwcmVmZXRjaFwiIGhyZWY9XCJibG9nL3twb3N0LnNsdWd9XCI+e3Bvc3QudGl0bGV9PC9hPlxuICAgIDwvbGk+XG4gIHsvZWFjaH1cbjwvdWw+IC0tPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1CRSxFQUFFLGVBQUMsQ0FBQyxBQUNGLFNBQVMsQ0FBRSxLQUFLLENBQ2hCLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLE1BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEFBQ3JCLENBQUMsQUFDRCxLQUFLLGVBQUMsQ0FBQyxBQUNMLE1BQU0sQ0FBRSxJQUFJLENBQ1osT0FBTyxDQUFFLFdBQVcsQ0FDcEIsT0FBTyxDQUFFLElBQUksQ0FDYixrQkFBa0IsQ0FBRSxVQUFVLENBQzlCLHFCQUFxQixDQUFFLE1BQU0sQ0FDckIsY0FBYyxDQUFFLEdBQUcsQUFDN0IsQ0FBQyxBQUVELEtBQUssZUFBQyxDQUFDLEFBQ0wsZ0JBQWdCLENBQUUsQ0FBQyxDQUNYLElBQUksQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDbkIsT0FBTyxDQUFFLFdBQVcsQ0FDcEIsT0FBTyxDQUFFLElBQUksQ0FDYixrQkFBa0IsQ0FBRSxRQUFRLENBQzVCLHFCQUFxQixDQUFFLE1BQU0sQ0FDckIsY0FBYyxDQUFFLE1BQU0sQ0FDOUIsaUJBQWlCLENBQUUsTUFBTSxDQUNqQixXQUFXLENBQUUsTUFBTSxDQUMzQixlQUFlLENBQUUsWUFBWSxBQUMvQixDQUFDLEFBRUQsR0FBRyxlQUFDLENBQUMsQUFDSCxLQUFLLENBQUUsS0FBSyxDQUNaLE1BQU0sQ0FBRSxLQUFLLEFBQ2YsQ0FBQyxBQUVELE1BQU0sZUFBQyxDQUFDLEFBQ04sZ0JBQWdCLENBQUUsQ0FBQyxDQUNYLElBQUksQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDbkIsZ0JBQWdCLENBQUUsQ0FBQyxDQUNYLFNBQVMsQ0FBRSxDQUFDLENBQ3BCLE9BQU8sQ0FBRSxXQUFXLENBQ3BCLE9BQU8sQ0FBRSxJQUFJLENBQ2Isa0JBQWtCLENBQUUsUUFBUSxDQUM1QixxQkFBcUIsQ0FBRSxNQUFNLENBQ3JCLGNBQWMsQ0FBRSxNQUFNLENBQzlCLGlCQUFpQixDQUFFLE1BQU0sQ0FDakIsV0FBVyxDQUFFLE1BQU0sQ0FDM0IsZUFBZSxDQUFFLFlBQVksQUFDL0IsQ0FBQyxBQUVELFFBQVEsZUFBQyxDQUFDLEFBQ1IsTUFBTSxDQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxBQUN4QixDQUFDIn0= */