import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, C as space, B as element, t as text, D as claim_space, b as claim_element, e as children, f as claim_text, g as detach_dev, o as attr_dev, h as add_location, j as insert_dev, k as append_dev, n as noop } from './index.279dd957.js';

/* src/routes/blog/index.svelte generated by Svelte v3.12.1 */

const file = "src/routes/blog/index.svelte";

function create_fragment(ctx) {
	var t0, div8, div2, h1, t1, t2, img, t3, div0, t4, t5, div1, t6, t7, div7, div3, t8, t9, div4, t10, t11, div5, t12, t13, div6, t14;

	const block = {
		c: function create() {
			t0 = space();
			div8 = element("div");
			div2 = element("div");
			h1 = element("h1");
			t1 = text("Cleaner homes website");
			t2 = space();
			img = element("img");
			t3 = space();
			div0 = element("div");
			t4 = text("description.");
			t5 = space();
			div1 = element("div");
			t6 = text("technologies");
			t7 = space();
			div7 = element("div");
			div3 = element("div");
			t8 = text("my role");
			t9 = space();
			div4 = element("div");
			t10 = text("problems");
			t11 = space();
			div5 = element("div");
			t12 = text("solutions");
			t13 = space();
			div6 = element("div");
			t14 = text("notable features");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_space(nodes);

			div8 = claim_element(nodes, "DIV", { class: true }, false);
			var div8_nodes = children(div8);

			div2 = claim_element(div8_nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			h1 = claim_element(div2_nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t1 = claim_text(h1_nodes, "Cleaner homes website");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div2_nodes);

			img = claim_element(div2_nodes, "IMG", { src: true, alt: true, class: true }, false);
			var img_nodes = children(img);

			img_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);

			div0 = claim_element(div2_nodes, "DIV", {}, false);
			var div0_nodes = children(div0);

			t4 = claim_text(div0_nodes, "description.");
			div0_nodes.forEach(detach_dev);
			t5 = claim_space(div2_nodes);

			div1 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			t6 = claim_text(div1_nodes, "technologies");
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t7 = claim_space(div8_nodes);

			div7 = claim_element(div8_nodes, "DIV", { class: true }, false);
			var div7_nodes = children(div7);

			div3 = claim_element(div7_nodes, "DIV", {}, false);
			var div3_nodes = children(div3);

			t8 = claim_text(div3_nodes, "my role");
			div3_nodes.forEach(detach_dev);
			t9 = claim_space(div7_nodes);

			div4 = claim_element(div7_nodes, "DIV", {}, false);
			var div4_nodes = children(div4);

			t10 = claim_text(div4_nodes, "problems");
			div4_nodes.forEach(detach_dev);
			t11 = claim_space(div7_nodes);

			div5 = claim_element(div7_nodes, "DIV", {}, false);
			var div5_nodes = children(div5);

			t12 = claim_text(div5_nodes, "solutions");
			div5_nodes.forEach(detach_dev);
			t13 = claim_space(div7_nodes);

			div6 = claim_element(div7_nodes, "DIV", {}, false);
			var div6_nodes = children(div6);

			t14 = claim_text(div6_nodes, "notable features");
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			document.title = "Blog";
			attr_dev(h1, "class", "svelte-8mrat8");
			add_location(h1, file, 60, 4, 895);
			attr_dev(img, "src", "cleanerHomes.png");
			attr_dev(img, "alt", "cleaner homes website design");
			attr_dev(img, "class", "svelte-8mrat8");
			add_location(img, file, 61, 4, 930);
			add_location(div0, file, 62, 4, 1000);
			attr_dev(div1, "class", "technologies svelte-8mrat8");
			add_location(div1, file, 63, 4, 1028);
			attr_dev(div2, "class", "left svelte-8mrat8");
			add_location(div2, file, 59, 2, 872);
			add_location(div3, file, 67, 4, 1109);
			add_location(div4, file, 68, 4, 1132);
			add_location(div5, file, 69, 4, 1156);
			add_location(div6, file, 70, 4, 1181);
			attr_dev(div7, "class", "right svelte-8mrat8");
			add_location(div7, file, 66, 2, 1085);
			attr_dev(div8, "class", "main svelte-8mrat8");
			add_location(div8, file, 57, 0, 850);
		},

		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div8, anchor);
			append_dev(div8, div2);
			append_dev(div2, h1);
			append_dev(h1, t1);
			append_dev(div2, t2);
			append_dev(div2, img);
			append_dev(div2, t3);
			append_dev(div2, div0);
			append_dev(div0, t4);
			append_dev(div2, t5);
			append_dev(div2, div1);
			append_dev(div1, t6);
			append_dev(div8, t7);
			append_dev(div8, div7);
			append_dev(div7, div3);
			append_dev(div3, t8);
			append_dev(div7, t9);
			append_dev(div7, div4);
			append_dev(div4, t10);
			append_dev(div7, t11);
			append_dev(div7, div5);
			append_dev(div5, t12);
			append_dev(div7, t13);
			append_dev(div7, div6);
			append_dev(div6, t14);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t0);
				detach_dev(div8);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

function preload({ params, query }) {
  return this.fetch(`blog.json`)
    .then(r => r.json())
    .then(posts => {
      return { posts };
    });
}

function instance($$self, $$props, $$invalidate) {
	let { posts } = $$props;

	const writable_props = ['posts'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Index> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('posts' in $$props) $$invalidate('posts', posts = $$props.posts);
	};

	$$self.$capture_state = () => {
		return { posts };
	};

	$$self.$inject_state = $$props => {
		if ('posts' in $$props) $$invalidate('posts', posts = $$props.posts);
	};

	return { posts };
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["posts"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Index", options, id: create_fragment.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.posts === undefined && !('posts' in props)) {
			console.warn("<Index> was created without expected prop 'posts'");
		}
	}

	get posts() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set posts(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Index;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYzBlYjc1OWUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvYmxvZy9pbmRleC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG4gIGV4cG9ydCBmdW5jdGlvbiBwcmVsb2FkKHsgcGFyYW1zLCBxdWVyeSB9KSB7XG4gICAgcmV0dXJuIHRoaXMuZmV0Y2goYGJsb2cuanNvbmApXG4gICAgICAudGhlbihyID0+IHIuanNvbigpKVxuICAgICAgLnRoZW4ocG9zdHMgPT4ge1xuICAgICAgICByZXR1cm4geyBwb3N0cyB9O1xuICAgICAgfSk7XG4gIH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuICBleHBvcnQgbGV0IHBvc3RzO1xuICBcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4gIC8qIHVsIHtcbiAgICBtYXJnaW46IDAgMCAxZW0gMDtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICB9ICovXG4gIGgxIHtcbiAgICBmb250LXNpemU6IDIuNGVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbiAgfVxuICAubWFpbiB7XG4gICAgaGVpZ2h0OiA4MHZoO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxuXG4gIC5sZWZ0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIH1cblxuICBpbWcge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICB9XG5cbiAgLnRlY2hub2xvZ2llcyB7XG4gICAgZmxleC1ncm93OiAyO1xuICB9XG4gIC5yaWdodCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPkJsb2c8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGRpdiBjbGFzcz1cIm1haW5cIj5cblxuICA8ZGl2IGNsYXNzPVwibGVmdFwiPlxuICAgIDxoMT5DbGVhbmVyIGhvbWVzIHdlYnNpdGU8L2gxPlxuICAgIDxpbWcgc3JjPVwiY2xlYW5lckhvbWVzLnBuZ1wiIGFsdD1cImNsZWFuZXIgaG9tZXMgd2Vic2l0ZSBkZXNpZ25cIiAvPlxuICAgIDxkaXY+ZGVzY3JpcHRpb24uPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInRlY2hub2xvZ2llc1wiPnRlY2hub2xvZ2llczwvZGl2PlxuICA8L2Rpdj5cblxuICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbiAgICA8ZGl2Pm15IHJvbGU8L2Rpdj5cbiAgICA8ZGl2PnByb2JsZW1zPC9kaXY+XG4gICAgPGRpdj5zb2x1dGlvbnM8L2Rpdj5cbiAgICA8ZGl2Pm5vdGFibGUgZmVhdHVyZXM8L2Rpdj5cbiAgPC9kaXY+XG5cbjwvZGl2PlxuXG48IS0tIDx1bD5cbiAgeyNlYWNoIHBvc3RzIGFzIHBvc3R9IC0tPlxuPCEtLSB3ZSdyZSB1c2luZyB0aGUgbm9uLXN0YW5kYXJkIGByZWw9cHJlZmV0Y2hgIGF0dHJpYnV0ZSB0b1xuXHRcdFx0XHR0ZWxsIFNhcHBlciB0byBsb2FkIHRoZSBkYXRhIGZvciB0aGUgcGFnZSBhcyBzb29uIGFzXG5cdFx0XHRcdHRoZSB1c2VyIGhvdmVycyBvdmVyIHRoZSBsaW5rIG9yIHRhcHMgaXQsIGluc3RlYWQgb2Zcblx0XHRcdFx0d2FpdGluZyBmb3IgdGhlICdjbGljaycgZXZlbnQgLS0+XG48IS0tIDxsaT5cbiAgICAgIDxhIHJlbD1cInByZWZldGNoXCIgaHJlZj1cImJsb2cve3Bvc3Quc2x1Z31cIj57cG9zdC50aXRsZX08L2E+XG4gICAgPC9saT5cbiAgey9lYWNofVxuPC91bD4gLS0+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNTLFNBQVMsT0FBTyxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFO0VBQ3pDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0tBQzNCLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0tBQ25CLElBQUksQ0FBQyxLQUFLLElBQUk7TUFDYixPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7S0FDbEIsQ0FBQyxDQUFDO0NBQ047OztDQUlNLE1BQUksaUJBQUssQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
